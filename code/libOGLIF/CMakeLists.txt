option(libOGLIF_Static "Build the lib as static or shared library." OFF)

if(libOGLIF_Static)
    set(LIBOGLIF_BUILDTYPE MODULE)
    set(LIBOGLIF_BUILDDEFINE OGLIF_STATIC)
else()
    set(LIBOGLIF_BUILDTYPE SHARED)
    set(LIBOGLIF_BUILDDEFINE "")
endif()

AddSourceDirectoryRecursive(fileSrcList "src" "Source")
AddHeaderDirectoryRecursive(fileHdrList "include" "Includes")
set(LIBOGLIF_FILES ${fileSrcList} ${fileHdrList})
Generate(${LIBOGLIF_BUILDTYPE} LIBOGLIF libOGLIF "Libraries")
target_include_directories(libOGLIF PRIVATE include/)
AddPublicInclude(LIBOGLIF ${CMAKE_CURRENT_SOURCE_DIR}/include/)
AddPublicDefine(LIBOGLIF ${LIBOGLIF_BUILDDEFINE})
Finalize(LIBOGLIF)

option(libOGLIF_Tests "Enable the unit and smoke test for libOGLIF." OFF)

if(libOGLIF_Tests)
    AddSourceDirectoryRecursive(filelist "tests" "Source")
    CreatePrecompiledHeader(LIBOGLIF_UNITTEST "precompiled.hpp" "tests/precompiled.cpp" filelist)
    set(LIBOGLIF_UNITTEST_FILES ${filelist})
    Generate(EXECUTABLE LIBOGLIF_UNITTEST libOGLIFTest "Tests")
    target_include_directories(libOGLIFTest PRIVATE tests/)
    AddDependency(LIBOGLIF_UNITTEST RadonFramework libOGLIF)
    Finalize(LIBOGLIF_UNITTEST)
endif()